{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/yulu/Heytour-joblist/UI/src/joblist/JobList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Container, Grid, Icon, Segment, Button, Modal, Form } from 'semantic-ui-react';\nimport { useJobList } from './JobListAPI';\nimport JobListContent from './JobListContent';\nimport JobForm from '../createJobs/JobForm';\nimport { useReducer } from 'react';\nimport { useState } from 'react';\nlet style = {\n  grid: {\n    margin: \"30px\"\n  }\n};\nexport default function JobList() {\n  _s();\n\n  const [jobList, setJobListFilter] = useJobList(null);\n  const [open, setOpen] = React.useState(false);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    textAlign: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      onClose: () => setOpen(false),\n      onOpen: () => setOpen(true),\n      open: open,\n      trigger: /*#__PURE__*/_jsxDEV(Button, {\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 26\n        }, this), \"Create new Job\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 18\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Create New Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n            required: true,\n            name: \"Job Title\",\n            label: \"Job Title\",\n            placeholder: \"Job Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            required: true,\n            name: \"Location\",\n            label: \"Location\",\n            placeholder: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            required: true,\n            name: \"Industry\",\n            label: \"Industry\",\n            placeholder: \"Industry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            required: true,\n            name: \"Picture\",\n            label: \"Picture\",\n            placeholder: \"Picture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            required: true,\n            name: \"Company\",\n            label: \"Company\",\n            placeholder: \"Company\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            required: true,\n            name: \"Email\",\n            label: \"Email\",\n            placeholder: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            required: true,\n            name: \"Job Description\",\n            label: \"Job Description\",\n            placeholder: \"Job Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      style: style.grid,\n      children: jobList.data && jobList.data.map(job => /*#__PURE__*/_jsxDEV(JobListContent, {\n        isLoading: jobList.isLoading,\n        job: job\n      }, job.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(JobList, \"XBkNLwsedsbXIuxmzYFh27wIxsM=\", false, function () {\n  return [useJobList];\n});\n\n_c = JobList;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobList\");","map":{"version":3,"sources":["/Users/yulu/Heytour-joblist/UI/src/joblist/JobList.js"],"names":["React","Container","Grid","Icon","Segment","Button","Modal","Form","useJobList","JobListContent","JobForm","useReducer","useState","style","grid","margin","JobList","jobList","setJobListFilter","open","setOpen","data","map","job","isLoading","id"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Container, Grid, Icon, Segment, Button, Modal,Form  } from 'semantic-ui-react'\nimport { useJobList } from './JobListAPI'\nimport JobListContent from './JobListContent';\nimport JobForm from '../createJobs/JobForm';\nimport { useReducer } from 'react';\nimport { useState} from 'react';\n\nlet style = {\n  grid : {margin:\"30px\"},\n}\n\n\nexport default function JobList() {\n  const [jobList, setJobListFilter] = useJobList(null);\n  const [open, setOpen] = React.useState(false)\n\n  return (\n    <Container fluid textAlign='center'>\n      <Modal\n        onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n        open={open}\n        trigger={<Button><Icon name='plus'/>Create new Job</Button>}\n        >\n            <Modal.Header>Create New Job</Modal.Header>\n            <Modal.Content>\n            <Form>\n                <Form.Input required name='Job Title' label='Job Title' placeholder='Job Title' />\n                <Form.Input required name='Location' label='Location' placeholder='Location' />\n                <Form.Input required name='Industry' label='Industry' placeholder='Industry' />\n                <Form.Input required name='Picture' label='Picture' placeholder='Picture' />\n                <Form.Input required name='Company' label='Company' placeholder='Company' />\n                <Form.Input required name='Email' label='Email' placeholder='Email' />\n                <Form.Input required name='Job Description' label='Job Description' placeholder='Job Description' />\n                <Button onClick={() => setOpen(false)}>Cancel</Button>\n                <Button type='submit'>Submit</Button>\n            </Form>\n            </Modal.Content>\n        </Modal>\n\n      <Grid style={style.grid}>\n      {jobList.data && jobList.data.map((job) => (\n          <JobListContent\n            key={job.id}\n            isLoading={jobList.isLoading}\n            job={job}\n          />\n        ))}\n      \n      </Grid>\n    </Container>   \n  )\n\n}"]},"metadata":{},"sourceType":"module"}