{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/yulu/Heytour-Yulu/src/common/AppMenu.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Menu } from 'semantic-ui-react';\nimport Login from \"../authentication/Login\"; // import {Login} from \"../authentication/Login\"\n\nconst initState = {\n  username: '',\n  pwd: '',\n  isLoggedIn: false,\n  loginOpen: false\n};\n\nfunction loginReducer(state, action) {\n  switch (action.type) {\n    case 'loggedIn':\n      return { ...state,\n        username: action.payload,\n        isLoggedIn: true,\n        loginOpen: false\n      };\n\n    case 'notLoggedIn':\n      return { ...state,\n        isLoggedIn: false,\n        loginOpen: true\n      };\n\n    case 'openModal':\n      return { ...state,\n        loginOpen: false\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default function AppMenu() {\n  _s();\n\n  const [reducer, dispatch] = React.useReducer(loginReducer, initState);\n  const [open, setOpen] = React.useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Menu, {\n      size: \"large\",\n      children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n        name: \"Heytour\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Menu, {\n        position: \"right\",\n        children: /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: reducer.isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: reducer.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 42\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            primary: true,\n            onClick: () => dispatch({\n              type: 'notLoggedIn'\n            }),\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), reducer.loginOpen && /*#__PURE__*/_jsxDEV(Login, {\n      open: () => setOpen(true),\n      onLogin: username => dispatch({\n        type: 'loggedIn',\n        payload: username\n      }),\n      onClose: () => dispatch({\n        type: 'openModal'\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n} // export default function AppMenu() {\n//     const[loginOpen, setLoginOpen] = useState(false);\n//     const [userName, setUserName] = useState('');\n//     const [isLoggedIn, setIsLoggedIn] = useState(false);\n//     function handleOpenLogin(){\n//         setLoginOpen(true);\n//     }\n//     function handleLoginClose(){\n//         setLoginOpen(false);\n//     }\n//     function handleLogin(username){\n//         if(username) {\n//             setUserName(username);\n//             setIsLoggedIn(true);\n//         }\n//         setLoginOpen(false);\n//     } \n//     return (\n//         <div>\n//             <Menu size='large'>\n//                 <Menu.Item\n//                 name='Heytour'\n//                 />\n//                 <Menu.Menu position='right'>\n//                 <Menu.Item>\n//                     {isLoggedIn ?(<div>{username}</div>):\n//                     (<Button primary\n//                         onClick={handleOpenLogin}\n//                     >\n//                         Login\n//                     </Button>)}\n//                 </Menu.Item>\n//                 </Menu.Menu>\n//             </Menu>\n//             {loginOpen &&\n//             <Login\n//                 open={loginOpen}\n//                 onClose={handleLoginClose}\n//                 onLogin={handleLogin}\n//             />\n//             }\n//         </div>  \n//     )\n// }\n\n_s(AppMenu, \"cTL+mQ1xAYSSELdxwK+7twWhG64=\");\n\n_c = AppMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppMenu\");","map":{"version":3,"sources":["/Users/yulu/Heytour-Yulu/src/common/AppMenu.js"],"names":["React","useState","Button","Menu","Login","initState","username","pwd","isLoggedIn","loginOpen","loginReducer","state","action","type","payload","AppMenu","reducer","dispatch","useReducer","open","setOpen"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,mBAA7B;AACA,OAAOC,KAAP,MAAkB,yBAAlB,C,CACA;;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,QAAQ,EAAE,EADI;AAEdC,EAAAA,GAAG,EAAE,EAFS;AAGdC,EAAAA,UAAU,EAAE,KAHE;AAIdC,EAAAA,SAAS,EAAE;AAJG,CAAlB;;AAOA,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,MAA7B,EAAqC;AACjC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHL,QAAAA,QAAQ,EAAEM,MAAM,CAACE,OAFd;AAGHN,QAAAA,UAAU,EAAE,IAHT;AAIHC,QAAAA,SAAS,EAAE;AAJR,OAAP;;AAMJ,SAAK,aAAL;AACI,aAAO,EACH,GAAGE,KADA;AAEHH,QAAAA,UAAU,EAAE,KAFT;AAGHC,QAAAA,SAAS,EAAE;AAHR,OAAP;;AAKJ,SAAK,WAAL;AACI,aAAO,EACH,GAAGE,KADA;AAEHF,QAAAA,SAAS,EAAE;AAFR,OAAP;;AAIJ;AACI,aAAOE,KAAP;AApBR;AAsBH;;AAED,eAAe,SAASI,OAAT,GAAmB;AAAA;;AAC9B,QAAM,CAACC,OAAD,EAAUC,QAAV,IAAsBjB,KAAK,CAACkB,UAAN,CAAiBR,YAAjB,EAA+BL,SAA/B,CAA5B;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBpB,KAAK,CAACC,QAAN,CAAe,KAAf,CAAxB;AAEA,sBACI;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAA,8BACI,QAAC,IAAD,CAAM,IAAN;AACA,QAAA,IAAI,EAAC;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,QAAQ,EAAC,OAApB;AAAA,+BACA,QAAC,IAAD,CAAM,IAAN;AAAA,oBACKe,OAAO,CAACR,UAAR,gBAAoB;AAAA,sBAAMQ,OAAO,CAACV;AAAd;AAAA;AAAA;AAAA;AAAA,kBAApB,gBACA,QAAC,MAAD;AAAQ,YAAA,OAAO,MAAf;AACG,YAAA,OAAO,EAAE,MAAKW,QAAQ,CAAC;AAACJ,cAAAA,IAAI,EAAE;AAAP,aAAD,CADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFL;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAgBKG,OAAO,CAACP,SAAR,iBACD,QAAC,KAAD;AACI,MAAA,IAAI,EAAE,MAAKW,OAAO,CAAC,IAAD,CADtB;AAEI,MAAA,OAAO,EAAGd,QAAD,IAAaW,QAAQ,CAAC;AAACJ,QAAAA,IAAI,EAAE,UAAP;AAAmBC,QAAAA,OAAO,EAAER;AAA5B,OAAD,CAFlC;AAGI,MAAA,OAAO,EAAE,MAAKW,QAAQ,CAAC;AAACJ,QAAAA,IAAI,EAAE;AAAP,OAAD;AAH1B;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,C,CACD;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GA9EwBE,O;;KAAAA,O","sourcesContent":["import React, { useState} from 'react'\nimport { Button, Menu } from 'semantic-ui-react'\nimport Login from \"../authentication/Login\";\n// import {Login} from \"../authentication/Login\"\n\nconst initState = {\n    username: '',\n    pwd: '',\n    isLoggedIn: false,\n    loginOpen: false\n}\n\nfunction loginReducer(state, action) {\n    switch (action.type) {\n        case 'loggedIn' :\n            return {\n                ...state,\n                username: action.payload,\n                isLoggedIn: true,\n                loginOpen: false,\n            }\n        case 'notLoggedIn':\n            return {\n                ...state,\n                isLoggedIn: false,\n                loginOpen: true\n            }\n        case 'openModal':\n            return {\n                ...state,\n                loginOpen: false\n            }\n        default: \n            return state;\n    }\n}\n\nexport default function AppMenu (){\n    const [reducer, dispatch] = React.useReducer(loginReducer, initState);\n    const [open, setOpen] = React.useState(false)\n\n    return (\n        <div>\n            <Menu size='large'>\n                <Menu.Item\n                name='Heytour'\n                />\n                <Menu.Menu position='right'>\n                <Menu.Item>\n                    {reducer.isLoggedIn?(<div>{reducer.username}</div>):\n                    (<Button primary\n                        onClick={()=> dispatch({type: 'notLoggedIn'})}\n                    >\n                        Login\n                    </Button>)}\n                </Menu.Item>\n                </Menu.Menu>\n            </Menu>\n            {reducer.loginOpen &&\n            <Login\n                open={()=> setOpen(true)}\n                onLogin={(username)=> dispatch({type: 'loggedIn', payload: username})}\n                onClose={()=> dispatch({type: 'openModal'})}\n            />\n            }\n        </div>  \n    )\n\n}\n// export default function AppMenu() {\n//     const[loginOpen, setLoginOpen] = useState(false);\n//     const [userName, setUserName] = useState('');\n//     const [isLoggedIn, setIsLoggedIn] = useState(false);\n    \n//     function handleOpenLogin(){\n//         setLoginOpen(true);\n//     }\n\n//     function handleLoginClose(){\n//         setLoginOpen(false);\n//     }\n\n//     function handleLogin(username){\n//         if(username) {\n//             setUserName(username);\n//             setIsLoggedIn(true);\n//         }\n//         setLoginOpen(false);\n//     } \n//     return (\n//         <div>\n//             <Menu size='large'>\n//                 <Menu.Item\n//                 name='Heytour'\n//                 />\n//                 <Menu.Menu position='right'>\n//                 <Menu.Item>\n//                     {isLoggedIn ?(<div>{username}</div>):\n//                     (<Button primary\n//                         onClick={handleOpenLogin}\n//                     >\n//                         Login\n//                     </Button>)}\n//                 </Menu.Item>\n//                 </Menu.Menu>\n//             </Menu>\n//             {loginOpen &&\n//             <Login\n//                 open={loginOpen}\n//                 onClose={handleLoginClose}\n//                 onLogin={handleLogin}\n//             />\n//             }\n//         </div>  \n//     )\n// }\n\n"]},"metadata":{},"sourceType":"module"}